---

---

<button
  id="theme-trigger"
  class="absolute z-10 top-[25%] right-0 flex items-center text-4xl md:text-5xl xl:text-6xl"
>
  <span>TOO&nbsp;</span>
  <span class="relative" id="theme-trigger_text"></span>
  <!--   <div class="blob">
    <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M64.5,-0.3C64.5,32,32.2,64,0.1,64C-32.1,64,-64.2,32,-64.2,-0.3C-64.2,-32.5,-32.1,-65,0.1,-65C32.2,-65,64.5,-32.5,64.5,-0.3Z"
        transform="translate(100 100)"></path>
    </svg>
  </div> -->
</button>

<style>
  button {
    --after-width: 110%;
    --after-height: 110%;
  }
  span {
    position: relative;
    font-family: var(--headings-font-family);
    color: var(--text-primary);

    z-index: 1;
  }

  #theme-trigger_text::before {
    content: "";
    position: absolute;
    z-index: -1;
    width: var(--after-width);
    height: var(--after-height);
    transform: translateX(-5%) translateY(-5%);
    background-color: var(--bg-solid-primary);
  }
</style>

<script>
  const body = document.body;

  const themeTrigger = document.getElementById(
    "theme-trigger",
  ) as HTMLButtonElement;

  const buttonText = themeTrigger.querySelector(
    "#theme-trigger_text",
  ) as HTMLSpanElement;

  const updateButtonText = () => {
    buttonText.textContent = document.body.classList.contains("dark")
      ? "DARK ?"
      : "LIGHT ?";
  };

  updateButtonText();

  themeTrigger.addEventListener("click", () => {
    body.classList.toggle("dark");
    updateButtonText();
  });
</script>
