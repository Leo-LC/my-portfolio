---
import SocialLinks from "../Links/SocialLinks.astro";

import ScrollArrow from "./ScrollArrow.astro";
import CTAButton from "../Buttons/CTAButton.astro";
---

<section id="hero" class="relative">
  <SocialLinks />

  <div
    class="hero_wrapper absolute inset-0 pt-[var(--header-height)] flex flex-col gap-8"
  >
    <div class="text-center">
      <div class="clip">
        <h3 id="first-line" class="text-[1.75rem] md:text-5xl xl:text-[3.5rem]">
          Hi my name is LÃ©o,
        </h3>
      </div>
      <div class="clip">
        <h3 class="text-[1.75rem] md:text-5xl xl:text-[3.5rem]">
          I am a dedicated, passionate
        </h3>
      </div>
      <div class="clip">
        <h1 class="uppercase">Front-End</h1>
      </div>
      <div class="clip">
        <h1 class="uppercase">Developer</h1>
      </div>
      <div class="clip">
        <h3 id="last-line" class="text-[1.75rem] md:text-5xl xl:text-[3.5rem]">
          Let's create YOUR web today.
        </h3>
      </div>
    </div>
    <CTAButton text="Contact me" href="#contact" />
    <ScrollArrow />
  </div>
</section>

<style>
  #hero {
    min-height: 100svh;
  }

  [astro-icon] {
    transform: translateY(-10%);
    animation: upAndDown 1s ease-in-out infinite alternate;
  }

  @keyframes upAndDown {
    100% {
      transform: translateY(10%);
    }
  }
</style>

<style>
  h1 {
    color: var(--text-primary);
    font-family: var(--headings-font-family);
    font-weight: var(--headings-font-weight);
    line-height: 0.95;
    font-size: 12rem;
  }

  @media screen and (max-width: 1280px) {
    h1 {
      font-size: 10rem;
    }
  }

  @media screen and (max-width: 768px) {
    h1 {
      font-size: 5rem;
    }
  }

  h3 {
    letter-spacing: -0.2rem;
    line-height: 1;
    padding-left: 0.2rem;
  }

  .hero_wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .clip {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    height: fit-content;
  }

  img {
    position: absolute;
    height: 100%;
    object-fit: cover;
  }

  .accent {
    position: relative;
    --after-width: 0%;
  }

  .accent::after {
    content: "";
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: var(--after-width);
    height: 100%;
    transform: translateX(-5%);

    background-color: var(--accent-bg-solid-primary);
    transition: all 0.3s ease-in-out;
  }
</style>

<!-- Animation Script -->
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  import Lenis from "@studio-freight/lenis";

  const lenis = new Lenis();
  function raf(time: number) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }
  requestAnimationFrame(raf);

  const contactMe = document.querySelector("#contact-me") as HTMLElement;
  const navItems = document.querySelectorAll(".nav__item, .nav__name");
  const header = document.querySelector("header");
  const clipped = document.querySelectorAll(".clip > *");
  const scrollArrow = document.querySelector("#hero_arrow");
  const social = document.querySelector("#social_links");

  contactMe.addEventListener("click", () => {
    lenis.scrollTo("#contact");
  });

  const tl = gsap.timeline({
    delay: 1,
  });

  /* HERO ANIMATIONs */

  tl.from(header, {
    scaleX: 0,
    transformOrigin: "center",
    duration: 1,
    ease: "power2.inOut",
  })
    .fromTo(
      navItems,
      {
        y: 60,
      },
      {
        y: 0,
        stagger: 0.1,
        duration: 0.5,
      },
    )
    .from(clipped, {
      yPercent: 100,
      stagger: 0.2,
      duration: 0.5,
      ease: "power2.inOut",
    })
    .fromTo(
      contactMe,
      {
        opacity: 0,
      },
      {
        opacity: 1,
        duration: 0.5,
        ease: "power2.inOut",
      },
    )
    .fromTo(
      scrollArrow,
      {
        opacity: 0,
      },
      {
        opacity: 1,
        duration: 0.5,
        ease: "power2.inOut",
      },
    )
    .fromTo(
      social,
      {
        scaleY: 0,
        opacity: 0,
        transformOrigin: "bottom",
      },
      {
        scaleY: 1,
        opacity: 1,
        duration: 1,
        ease: "power2.inOut",
      },
      "-=1",
    );

  tl.eventCallback("onComplete", () => {
    tl.kill();
  });
</script>
