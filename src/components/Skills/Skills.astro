---
import SectionTitle from "../Text/SectionTitle/SectionTitle";
import SkillsCard from "./SkillsCard.astro";
---

<section
  id="skills"
  class="relative min-h-screen pt-[var(--header-height)] pb-[var(--footer-height)] overflow-hidden flex flex-col gap-8"
>
  <SectionTitle client:visible title="My Front-End Toolbox .Â " />
  <div class="toolbox_wrapper relative">
    <SkillsCard />

    <p class="text-center">
      I am constantly refining my craft and pushing my abilities to create
      captivating web experiences. With a passion for building fast, responsive,
      and user-friendly websites. <br /> I'm excited to collaborate and bring
      your visions to life!
    </p>
  </div>
</section>

<style>
  .toolbox_wrapper {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    justify-content: space-evenly;
    gap: 4rem;
  }
  p {
    font-size: 2.5rem;
    max-width: 40ch;
    line-height: 1.3;
    letter-spacing: -0.1rem;
    font-weight: 200;
  }

  @media screen and (max-width: 1280px) {
    p {
      font-size: 2.25rem;
      max-width: 34ch;
    }
  }

  @media screen and (max-width: 768px) {
    p {
      font-size: 1.5rem;
      max-width: 20ch;
      height: 100vh;
      display: flex;
      align-items: center;
    }
  }
</style>

<!-- Animation Script -->
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  revealCards();

  function revealCards() {
    const cards = document.querySelectorAll("#skills .cards-wrapper .card");

    cards.forEach((card, i) => {
      let tl = gsap.timeline({
        delay: 0.2 * i,
        scrollTrigger: "#skills .cards-wrapper",
      });
      tl.fromTo(
        card,
        {
          y: 100,
          opacity: 0,
        },
        {
          y: 0,
          opacity: 1,
          duration: 0.5,
          ease: "power4.out",
        },
      );
      tl.eventCallback("onComplete", () => {
        tl.kill();
      });
    });
  }

  const text = document.querySelectorAll(".toolbox_wrapper > p");

  let tl = gsap.timeline({
    scrollTrigger: ".toolbox_wrapper",
    delay: 0.5,
  });

  tl.fromTo(
    text,
    {
      opacity: 0,
      yPercent: 100,
    },
    {
      opacity: 1,
      yPercent: 0,
      duration: 4,

      ease: "power2.out",
    },
  );

  tl.eventCallback("onComplete", () => {
    tl.kill();
  });
</script>
