---
import SectionTitle from "../Text/SectionTitle/SectionTitle";
import WorksCarousel from "./WorksCarousel.astro";
import WorksCard from "./WorksCard.astro";
/* import "@splidejs/splide/css"; */
---

<section
  id="works"
  class="relative pt-[var(--header-height)] flex flex-col gap-8"
>
  <SectionTitle client:visible title="Some of my Recent projects .Â " />

  <div class="cards-wrapper flex gap-8 justify-center relative">
    <div class="overlay">
      <span>Project</span>
      <div class="clip">
        <h4>Nom du Projet</h4>
      </div>
    </div>
    <WorksCard name="Projet 1" date="09.2023" src="src/images/Coffee.jpg" />
    <WorksCard name="Projet 2" date="10.2023" src="src/images/Travel.jpg" />
    <WorksCard name="Projet 3" date="11.2023" src="src/images/Vinyl.jpg" />
  </div>
</section>

<style>
/*   section {
    position: relative;
    background-color: var(--bg-secondary);
    border: 3px solid pink;
    min-height: 100vh;
  } */

  .overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .overlay span {
    text-transform: uppercase;
    font-size: 2rem;
    line-height: 1;
  }

  .overlay h4 {
    font-family: var(--headings-font-family);
    font-size: 4rem;
    line-height: 1;
    font-weight: 700;
    text-transform: uppercase;
  }
  .clip {
    background-color: transparent;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
  }
  .reveal {
    animation: reveal 0.3s ease-in-out;
  }
  @keyframes reveal {
    0% {
      transform: translateY(100%);
    }
    100% {
      transform: translateY(0);
    }
  }
</style>

<script>
  const cards = document.querySelectorAll(".card");
  const overlay = document.querySelector(".overlay") as HTMLElement;
  const overlayTitle = overlay.querySelector("h4") as HTMLElement;

  cards.forEach((card) => {
    card.addEventListener("mouseover", (e) => {
      overlayTitle.classList.add("reveal");

      overlay.style.opacity = "1";

      cards.forEach((c) => {
        c.setAttribute("data-active", "false");
      });
      card.setAttribute("data-active", "true");
    });

    card.addEventListener("mouseout", () => {
      overlay.style.opacity = "0";
      overlayTitle.classList.remove("reveal");
      cards.forEach((c) => {
        c.setAttribute("data-active", "true");
      });
    });
  });
</script>
