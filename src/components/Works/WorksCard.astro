---
interface Props {
  name: string;
  date: string;
  src: string;
  last?: string;
}
const { name, date, src, last = "false" } = Astro.props;
---

<div
  class="card flex flex-col flex-wrap gap-2"
  data-active="true"
  data-last={last}
>
  <div class="relative z-[1] rounded-2xl overflow-hidden grow">
    <img class="object-cover aspect-[4/6]" src={src} alt="" />
  </div>
  <div class="text flex justify-between">
    <div class="text_name">
      <p>{name}</p>
    </div>
    <div class="text_date">
      <p>{date}</p>
    </div>
  </div>
</div>

<style>
  img {
    width: 100%;
  }
  @media screen and (min-width: 768px) and (max-width: 1200px) {
    .card[data-last="true"] {
      grid-column: 1/-1;
    }

    .card[data-last="false"] img {
      aspect-ratio: 6/4;
    }
    .card[data-last="true"] img {
      aspect-ratio: 16/9;
    }
  }

  .text {
    color: var(--text-primary);
    padding-inline: 0.5rem;
  }

  .card {
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
  }

  .card[data-active="true"] {
    opacity: 1;
  }

  .card[data-active="false"] {
    opacity: 0.1;
  }
</style>

<!-- <script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const cards = document.querySelectorAll("#works .cards-wrapper .card");

  cards.forEach((card, i) => {
    let tl = gsap.timeline({
      delay: 0.2 * i,
      scrollTrigger: "#works .cards-wrapper",
    });
    tl.fromTo(
      card,
      {
        y: 100,
        opacity: 0,
      },
      {
        y: 0,
        opacity: 1,
        duration: 0.5,
        stagger: 0.2,
        ease: "power4.out",
      },
    );
  });
</script> -->
